import requests
import telebot
from telebot import types, TeleBot
from dotenv import load_dotenv
import os
from notion_integration import create_page


# from app.add_new_event.new_event import process_name_step, process_date_step, process_greeting_text_step



load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

bot = TeleBot(TELEGRAM_TOKEN)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏
user_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    add_event_btn = types.KeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –ø–æ–¥—ñ—é")
    show_events_btn = types.KeyboardButton("üìÖ –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–¥—ñ—ó")
    update_btn = types.KeyboardButton("üîÑ –û–Ω–æ–≤–∏—Ç–∏ –ø–æ–¥—ñ—é")
    delete_btn = types.KeyboardButton("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é")
    show_people_btn = types.KeyboardButton("üë• –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–º–µ–Ω–∞ —Ç–∞ –Ω–∞–∑–≤–∏ —Å–≤—è—Ç")

    keyboard.add(add_event_btn, show_events_btn, update_btn, delete_btn, show_people_btn)
    bot.send_message(message.chat.id, "–í–∞—Å –≤—ñ—Ç–∞—î –±–æ—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä! –í–∏–±–µ—Ä—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ –ø–µ—Ä–µ–ª—ñ–∫—É.", reply_markup=keyboard)


# –û–ë–†–û–ë–ö–ê –°–¢–í–û–†–ï–ù–ù–Ø –ù–û–í–û–á –ü–û–î–Ü–á, –ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –ø–æ–¥—ñ—é")
def add_new_event(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∞–±–æ –Ω–∞–∑–≤—É –ø–æ–¥—ñ—ó:")
    bot.register_next_step_handler(msg, process_name_step)


def process_name_step(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∏–º—è/–Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_data
    user_data["–Ü–º'—è/–Ω–∞–∑–≤–∞"] = {"title": [{"text": {"content": message.text}}]}
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ YYYY-MM-DD:")
    bot.register_next_step_handler(msg, process_date_step)


def process_date_step(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—É—é –¥–∞—Ç—É –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_data
    user_data["–î–∞—Ç–∞"] = {"date": {"start": message.text, "end": None}}
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:")
    bot.register_next_step_handler(msg, process_greeting_text_step)


def process_greeting_text_step(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_data
    user_data["–¢–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è"] = {"rich_text": [{"text": {"content": message.text}}]}
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ Notion
    bot.send_message(message.chat.id, "–ü–æ–¥—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–æ!")


    # TODO –°–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ –≤ –ø–∞–ø–∫—É, –∞ –ø–æ—Ç–æ–º –≤—ã–≥—Ä—É–∑–∫–∏ –µ–≥–æ –≤ –±–∞–∑—É.
    # elif step == "photo":
    #     if message.content_type == "photo":
    #         # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    #         user_data[user_id]["photo"] = message.photo[-1].file_id  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∞–º–æ–≥–æ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ —Ñ–æ—Ç–æ
    #         bot.send_message(message.chat.id, "–ü–æ–¥—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∞!")
    #
    #         # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–∏—Å—Ç–µ–º–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è
    #         # save_event_to_db(user_data[user_id])  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    #
    #         # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ user_data
    #         # del user_data[user_id]
    #     else:
    #         bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ, –∞ –Ω–µ —Ç–µ–∫—Å—Ç.")


    print(user_data)




# @bot.message_handler(commands=['add_new_event'])
# def start_add_event(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     markup.add(types.KeyboardButton("–û—Ç–º–µ–Ω–∞"))
#     bot.send_message(
#         message.chat.id,
#         "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞' –¥–ª—è –≤—ã—Ö–æ–¥–∞:",
#         reply_markup=markup
#     )
#     bot.register_next_step_handler(message, get_title)
#
#
# def get_title(message):
#     if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
#         bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
#         return
#
#     user_data['title'] = message.text
#     bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î):")
#     bot.register_next_step_handler(message, get_date)
#
#
# def get_date(message):
#     if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
#         bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
#         return
#
#     user_data['date'] = message.text
#     bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:")
#     bot.register_next_step_handler(message, get_description)
#
#
# def get_description(message):
#     if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
#         bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
#         return
#
#     user_data['description'] = message.text
#
#     # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Notion
#     title = user_data.get('title')
#     date = user_data.get('date')
#     description = user_data.get('description')
#
#     success = add_event_to_notion(title, date, description)
#
#     if success:
#         bot.send_message(message.chat.id, "–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Notion!",
#                          reply_markup=types.ReplyKeyboardRemove())
#     else:
#         bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è.",
#                          reply_markup=types.ReplyKeyboardRemove())


bot.polling()


